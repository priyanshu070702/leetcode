  ListNode t1=head,t2=head;
        while(n!=0){
            t1 = t1.next;
            n--;
        }
   
        if(t1 == null){
            return head.next;
        }
        while(t1.next!=null){
            t1 = t1.next;
            t2 = t2.next;
        }
        t2.next = t2.next.next;
        return head;
    }
    
    link-https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/?envType=study-plan&id=algorithm-i

int cnt=0;
        ListNode *a=head;
        while(a!=nullptr){
            cnt++;
            a=a->next;
        }
        ListNode *b=head;
        for(int i=1;i<cnt-n;i++){
            b=b->next;
        }
        ListNode *c;
        c=b->next;
        if(c->next==nullptr){
            delete c;
        }
        else{
            b->next=c->next;
            delete c;
            c=b->next;
        }
        return head;
    }
